# Generated by Django 3.0.5 on 2020-04-11 07:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyRoutine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wake_up_time', models.TimeField(blank=True)),
                ('breakfast_time', models.TimeField(blank=True)),
                ('mid_morning_time', models.TimeField(blank=True)),
                ('lunch_time', models.TimeField(blank=True)),
                ('lunch_location', models.CharField(blank=True, choices=[('Home', 'Home'), ('Lunch Box', 'Lunch Box'), ('Office Canteen', 'Office Canteen')], max_length=100)),
                ('tea_time', models.TimeField(blank=True)),
                ('dinner_time', models.TimeField(blank=True)),
                ('bed_time', models.TimeField(blank=True)),
                ('office_start_time', models.TimeField(blank=True)),
                ('office_end_time', models.TimeField(blank=True)),
                ('exercise_routine', models.CharField(choices=[('Regular', 'Regular'), ('Not Regular', 'Not Regular')], max_length=100)),
                ('exercise_time', models.TimeField(blank=True)),
                ('cardio', models.BooleanField(blank=True)),
                ('strength_training', models.BooleanField(blank=True)),
                ('yoga', models.BooleanField(blank=True)),
                ('walk', models.BooleanField(blank=True)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='associated_health_problems_complete',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='daily_routine_complete',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='family_medical_history_complete',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='payment_complete',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='personal_info_complete',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='personal_medical_history_complete',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='PersonalMedicalHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('Obesity', 'Obesity'), ('Blood Pressure', 'Blood Pressure'), ('Heart Attack / Bypass / Stroke', 'Heart Attack / Bypass / Stroke'), ('Diabetes', 'Diabetes'), ('Cancer', 'Cancer'), ('Hypothyroid', 'Hypothyroid'), ('Hyperthyroidism', 'Hyperthyroidism'), ('PCOD', 'PCOD'), ('Menopausal', 'Menopausal')], max_length=50)),
                ('blood_report', models.FileField(blank=True, upload_to='')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personal_medical_history', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, upload_to='')),
                ('date_of_birth', models.DateField(blank=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Others', 'Others')], max_length=10)),
                ('age', models.IntegerField(blank=True)),
                ('address', models.CharField(blank=True, max_length=500)),
                ('profession', models.CharField(blank=True, choices=[('Retired', 'Retired'), ('Homemaker', 'Homemaker'), ('Service', 'Service'), ('Self-employed', 'Self-employed')], max_length=100)),
                ('reason_for_visit', models.CharField(blank=True, max_length=500)),
                ('diet_preference', models.CharField(blank=True, choices=[('Vegetarian', 'Vegetarian'), ('Non-Vegetarian', 'Non-Vegetarian'), ('Eggiterian', 'Eggiterian'), ('Vegan', 'Vegan')], max_length=15)),
                ('referral_source', models.CharField(blank=True, choices=[('Doctor', 'Doctor'), ('Friends', 'Friends'), ('Relatives', 'Relatives'), ('Newspapers', 'Newspapers'), ('Magazines', 'Magazines'), ('Facebook', 'Facebook'), ('Our Website', 'Our Website')], max_length=20)),
                ('ref_name', models.CharField(blank=True, max_length=50)),
                ('ref_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('ref_email', models.EmailField(blank=True, max_length=254)),
                ('medications', models.CharField(blank=True, max_length=100)),
                ('dosages', models.CharField(blank=True, max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='personal_information', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FamilyMedicalHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Obesity', 'Obesity'), ('Blood Pressure', 'Blood Pressure'), ('Heart Attack / Bypass / Stroke', 'Heart Attack / Bypass / Stroke'), ('Diabetes', 'Diabetes'), ('Cancer', 'Cancer'), ('Hypothyroid', 'Hypothyroid')], max_length=50)),
                ('member', models.CharField(choices=[('Mother', 'Mother'), ('Father', 'Father'), ('Brother', 'Brother'), ('Sister', 'Sister'), ('Grand Mother', 'Grand Mother'), ('Grand Father', 'Grand Father'), ('Uncle', 'Uncle'), ('Aunt', 'Aunt')], max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family_medical_history', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AssociatedHealthProblems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acidity', models.BooleanField(blank=True)),
                ('gout', models.BooleanField(blank=True)),
                ('menstrual', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Disturbed', 'Disturbed'), ('Menopausal', 'Menopausal'), ('PCOD', 'PCOD'), ('Not Applicable', 'Not Applicable')], max_length=20)),
                ('pregnancies', models.IntegerField(blank=True)),
                ('overweight_as_child', models.BooleanField(blank=True)),
                ('weight_gain_since', models.DateField(blank=True)),
                ('reason_for_gain', models.TextField(blank=True)),
                ('lost_and_gained_times', models.IntegerField(blank=True)),
                ('smoke', models.BooleanField(blank=True)),
                ('smoke_level', models.CharField(blank=True, choices=[('Occasional', 'Occasional'), ('Regular', 'Regular'), ('Heavy', 'Heavy')], max_length=100)),
                ('tobacco', models.BooleanField(blank=True)),
                ('tobacco_level', models.CharField(blank=True, choices=[('Occasional', 'Occasional'), ('Regular', 'Regular'), ('Heavy', 'Heavy')], max_length=100)),
                ('alcohol', models.BooleanField(blank=True)),
                ('alcohol_level', models.CharField(blank=True, choices=[('Occasional', 'Occasional'), ('Regular', 'Regular'), ('Heavy', 'Heavy')], max_length=100)),
                ('other_dietary_issues', models.TextField(blank=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='associated_health_problems', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
